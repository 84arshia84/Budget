// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.BudgetRequest.BudgetRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FundingSourceId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RequestTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("RequestingDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("budgetEstimationRanges")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundingSourceId");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("RequestingDepartmentId");

                    b.ToTable("BudgetRequests");
                });

            modelBuilder.Entity("Domain.FundingSource.FundingSource", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("FundingSources");
                });

            modelBuilder.Entity("Domain.RequestType.RequestType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("Domain.RequestingDepartment.RequestingDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestingDepartments");
                });

            modelBuilder.Entity("Domain.BudgetRequest.BudgetRequest", b =>
                {
                    b.HasOne("Domain.FundingSource.FundingSource", "FundingSource")
                        .WithMany("BudgetRequests")
                        .HasForeignKey("FundingSourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.RequestType.RequestType", "RequestType")
                        .WithMany("BudgetRequests")
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.RequestingDepartment.RequestingDepartment", "RequestingDepartment")
                        .WithMany("BudgetRequests")
                        .HasForeignKey("RequestingDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FundingSource");

                    b.Navigation("RequestType");

                    b.Navigation("RequestingDepartment");
                });

            modelBuilder.Entity("Domain.FundingSource.FundingSource", b =>
                {
                    b.Navigation("BudgetRequests");
                });

            modelBuilder.Entity("Domain.RequestType.RequestType", b =>
                {
                    b.Navigation("BudgetRequests");
                });

            modelBuilder.Entity("Domain.RequestingDepartment.RequestingDepartment", b =>
                {
                    b.Navigation("BudgetRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
